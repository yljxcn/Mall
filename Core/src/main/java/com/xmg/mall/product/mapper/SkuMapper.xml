<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmg.mall.product.mapper.SkuMapper">
  <resultMap id="BASE_RESULT" type="com.xmg.mall.product.domain.Sku">
    <id property="id" column="id"/>
    <result property="createdDate" column="createdDate"/>
    <result property="lastModifiedDate" column="lastModifiedDate"/>
    <result property="version" column="version"/>
    <result property="productId" column="productId"/>
    <result property="code" column="code"/>
    <result property="price" column="price"/>
    <result property="mods" column="mods"/>
  </resultMap>
  <sql id="BASE_COLUMNS">sku.id, sku.createdDate, sku.lastModifiedDate, sku.version,sku.productId,sku.code,sku.price,sku.mods</sql>
  <sql id="QUERY_COLUMNS">sku.id, sku.createdDate, sku.lastModifiedDate, sku.version,sku.productId,sku.code,sku.price,sku.mods</sql>
  <resultMap id="VO_RESULT" type="com.xmg.mall.product.vo.ExtendedSku" extends="BASE_RESULT">
    <association property="product" column="productId" javaType="com.xmg.mall.product.domain.Product" columnPrefix="product_" resultMap="com.xmg.mall.product.mapper.ProductMapper.BASE_RESULT"/>
  </resultMap>
  <sql id="JOIN_COLUMNS">
    <if test="joinProduct != null">, product.id AS product_id, product.name AS product_name, product.code AS product_code</if>
  </sql>
  <select id="get" resultMap="BASE_RESULT" parameterType="java.lang.Long">SELECT 
    <include refid="BASE_COLUMNS"/> FROM `Sku` sku WHERE id = #{id }
  </select>
  <delete id="delete" parameterType="java.lang.Long">DELETE FROM `Sku` WHERE id = #{id}</delete>
  <insert id="add" parameterType="com.xmg.mall.product.domain.Sku" useGeneratedKeys="true" keyProperty="id" keyColumn="id">INSERT INTO `Sku`(id, createdDate, version,productId,code,price,mods) VALUES(#{id }, #{createdDate}, 0, #{productId }, #{code }, #{price }, #{mods })</insert>
  <update id="update" parameterType="com.xmg.mall.product.domain.Sku">UPDATE `Sku`
    <set>lastModifiedDate = now(), version = version + 1, productId = #{productId }, price = #{price }, mods = #{mods }</set>
    <where>id = #{id } AND version = #{version }</where>
  </update>
  <sql id="QUERY_JOIN">
    <if test="joinProduct != null">${joinProduct.name} `Product` product ON product.id = sku.productId</if>
  </sql>
  <sql id="QUERY_WHERE_SQL">
    <if test="ids != null">AND sku.id IN
      <foreach collection="ids" item="id" open="(" close=")" separator=", ">#{id }</foreach>
    </if>
    <if test="startCreatedDate != null">AND sku.createdDate &gt;= #{startCreatedDate }</if>
    <if test="endCreatedDate != null">AND sku.createdDate &lt;= #{endCreatedDate }</if>
    <if test="productId != null">AND sku.productId = #{productId}</if>
    <if test="code != null">AND sku.code = #{code}</if>
    <if test="likeCode != null">AND sku.code LIKE CONCAT(#{likeCode} ,'%')</if>
    <if test="price != null">AND sku.price = #{price}</if>
    <if test="minPrice != null">AND sku.price &gt;= #{minPrice}</if>
    <if test="maxPrice != null">AND sku.price &lt;= #{maxPrice}</if>
    <if test="excludeMods != null">AND 
      <foreach collection="excludeMods" item="mod" open="(" close=")" separator=" AND ">sku.mods &amp; #{mod } = 0</foreach>
    </if>
    <if test="includeMods != null &amp;&amp; excludeMods == null ">AND 
      <foreach collection="includeMods" item="mod" open="(" close=")" separator=" AND ">sku.mods &amp; #{mod } &lt;&gt; 0</foreach>
    </if>
    <if test="productQuery != null &amp;&amp; joinProduct">
      <if test="productQuery.ids != null">AND product.id IN
        <foreach collection="productQuery.ids" item="id" open="(" close=")" separator=", ">#{id }</foreach>
      </if>
      <if test="productQuery.startCreatedDate != null">AND product.createdDate &gt;= #{productQuery.startCreatedDate }</if>
      <if test="productQuery.endCreatedDate != null">AND product.createdDate &lt;= #{productQuery.endCreatedDate }</if>
      <if test="productQuery.catalogId != null">AND product.catalogId = #{productQuery.catalogId}</if>
      <if test="productQuery.brandId != null">AND product.brandId = #{productQuery.brandId}</if>
      <if test="productQuery.name != null">AND product.name = #{productQuery.name}</if>
      <if test="productQuery.likeName != null">AND product.name LIKE CONCAT(#{productQuery.likeName} ,'%')</if>
      <if test="productQuery.keyword != null">AND product.keyword = #{productQuery.keyword}</if>
      <if test="productQuery.likeKeyword != null">AND product.keyword LIKE CONCAT(#{productQuery.likeKeyword} ,'%')</if>
      <if test="productQuery.code != null">AND product.code = #{productQuery.code}</if>
      <if test="productQuery.likeCode != null">AND product.code LIKE CONCAT(#{productQuery.likeCode} ,'%')</if>
      <if test="productQuery.marketPrice != null">AND product.marketPrice = #{productQuery.marketPrice}</if>
      <if test="productQuery.minMarketPrice != null">AND product.marketPrice &gt;= #{productQuery.minMarketPrice}</if>
      <if test="productQuery.maxMarketPrice != null">AND product.marketPrice &lt;= #{productQuery.maxMarketPrice}</if>
      <if test="productQuery.basePrice != null">AND product.basePrice = #{productQuery.basePrice}</if>
      <if test="productQuery.minBasePrice != null">AND product.basePrice &gt;= #{productQuery.minBasePrice}</if>
      <if test="productQuery.maxBasePrice != null">AND product.basePrice &lt;= #{productQuery.maxBasePrice}</if>
      <if test="productQuery.excludeMods != null">AND 
        <foreach collection="productQuery.excludeMods" item="mod" open="(" close=")" separator=" AND ">product.mods &amp; #{mod } = 0</foreach>
      </if>
      <if test="productQuery.includeMods != null &amp;&amp; productQuery.excludeMods == null ">AND 
        <foreach collection="productQuery.includeMods" item="mod" open="(" close=")" separator=" AND ">product.mods &amp; #{mod } &lt;&gt; 0</foreach>
      </if>
    </if>
  </sql>
  <sql id="QUERY_WHERE">
    <where>
      <include refid="QUERY_WHERE_SQL"/>
    </where>
  </sql>
  <sql id="QUERY_ORDER_BY">
    <if test="orderBys.size() &gt; 0">ORDER BY
      <foreach collection="orderBys.entrySet()" item="entry" separator=", ">sku.${entry.key} ${entry.value}</foreach>
    </if>
  </sql>
  <sql id="QUERY_LIMIT">
    <if test="pageSize &gt; 0">LIMIT ${start}, ${pageSize}</if>
  </sql>
  <select id="count" parameterType="com.xmg.mall.product.qo.SkuQuery" resultType="java.lang.Integer">SELECT COUNT(*) FROM `Sku` AS sku
    <include refid="QUERY_JOIN"/>
    <include refid="QUERY_WHERE"/>
  </select>
  <select id="query" parameterType="com.xmg.mall.product.qo.SkuQuery" resultMap="VO_RESULT">SELECT 
    <include refid="QUERY_COLUMNS"/>
    <include refid="JOIN_COLUMNS"/> FROM `Sku` AS sku
    <include refid="QUERY_JOIN"/>
    <include refid="QUERY_WHERE"/>
    <include refid="QUERY_ORDER_BY"/>
    <include refid="QUERY_LIMIT"/>
  </select>
</mapper>
