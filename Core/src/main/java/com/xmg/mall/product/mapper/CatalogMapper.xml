<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmg.mall.product.mapper.CatalogMapper">
  <resultMap id="BASE_RESULT" type="com.xmg.mall.product.domain.Catalog">
    <id property="id" column="id"/>
    <result property="createdDate" column="createdDate"/>
    <result property="lastModifiedDate" column="lastModifiedDate"/>
    <result property="version" column="version"/>
    <result property="level" column="level"/>
    <result property="name" column="name"/>
    <result property="code" column="code"/>
    <result property="sequence" column="sequence"/>
    <result property="childrenCatalogs" column="childrenCatalogs"/>
    <result property="products" column="products"/>
    <result property="parentCatalogId" column="parentCatalogId"/>
  </resultMap>
  <sql id="BASE_COLUMNS">catalog.id, catalog.createdDate, catalog.lastModifiedDate, catalog.version,catalog.level,catalog.name,catalog.code,catalog.sequence,catalog.childrenCatalogs,catalog.products,catalog.parentCatalogId</sql>
  <sql id="QUERY_COLUMNS">catalog.id, catalog.createdDate, catalog.lastModifiedDate, catalog.version,catalog.level,catalog.name,catalog.code,catalog.sequence,catalog.childrenCatalogs,catalog.products,catalog.parentCatalogId</sql>
  <resultMap id="VO_RESULT" type="com.xmg.mall.product.vo.ExtendedCatalog" extends="BASE_RESULT">
    <association property="parentCatalog" column="parentCatalogId" javaType="com.xmg.mall.product.domain.Catalog" columnPrefix="parentCatalog_" resultMap="com.xmg.mall.product.mapper.CatalogMapper.BASE_RESULT"/>
  </resultMap>
  <sql id="JOIN_COLUMNS">
    <if test="joinParentCatalog != null">, parentCatalog.id AS parentCatalog_id, parentCatalog.name AS parentCatalog_name, parentCatalog.sn AS parentCatalog_sn</if>
  </sql>
  <select id="get" resultMap="BASE_RESULT" parameterType="java.lang.Long">SELECT 
    <include refid="BASE_COLUMNS"/> FROM `Catalog` catalog WHERE id = #{id }
  </select>
  <delete id="delete" parameterType="java.lang.Long">DELETE FROM `Catalog` WHERE id = #{id}</delete>
  <insert id="add" parameterType="com.xmg.mall.product.domain.Catalog" useGeneratedKeys="true" keyProperty="id" keyColumn="id">INSERT INTO `Catalog`(id, createdDate, version,level,name,code,sequence,childrenCatalogs,products,parentCatalogId) VALUES(#{id }, #{createdDate}, 0, #{level }, #{name }, #{code }, #{sequence }, #{childrenCatalogs }, #{products }, #{parentCatalogId })</insert>
  <update id="update" parameterType="com.xmg.mall.product.domain.Catalog">UPDATE `Catalog`
    <set>lastModifiedDate = now(), version = version + 1, level = #{level }, name = #{name }, code = #{code }, sequence = #{sequence }, childrenCatalogs = #{childrenCatalogs }, products = #{products }, parentCatalogId = #{parentCatalogId }</set>
    <where>id = #{id } AND version = #{version }</where>
  </update>
  <sql id="QUERY_JOIN">
    <if test="joinParentCatalog != null">${joinParentCatalog.name} `Catalog` parentCatalog ON parentCatalog.id = catalog.parentCatalogId</if>
  </sql>
  <sql id="QUERY_WHERE_SQL">
    <if test="ids != null">AND catalog.id IN
      <foreach collection="ids" item="id" open="(" close=")" separator=", ">#{id }</foreach>
    </if>
    <if test="startCreatedDate != null">AND catalog.createdDate &gt;= #{startCreatedDate }</if>
    <if test="endCreatedDate != null">AND catalog.createdDate &lt;= #{endCreatedDate }</if>
    <if test="level != null">AND catalog.level = #{level}</if>
    <if test="name != null">AND catalog.name = #{name}</if>
    <if test="likeName != null">AND catalog.name LIKE CONCAT(#{likeName} ,'%')</if>
    <if test="code != null">AND catalog.code = #{code}</if>
    <if test="likeCode != null">AND catalog.code LIKE CONCAT(#{likeCode} ,'%')</if>
    <if test="parentCatalogId != null">AND catalog.parentCatalogId = #{parentCatalogId}</if>
    <if test="parentCatalogQuery != null &amp;&amp; joinParentCatalog">
      <if test="parentCatalogQuery.ids != null">AND parentCatalog.id IN
        <foreach collection="parentCatalogQuery.ids" item="id" open="(" close=")" separator=", ">#{id }</foreach>
      </if>
      <if test="parentCatalogQuery.startCreatedDate != null">AND parentCatalog.createdDate &gt;= #{parentCatalogQuery.startCreatedDate }</if>
      <if test="parentCatalogQuery.endCreatedDate != null">AND parentCatalog.createdDate &lt;= #{parentCatalogQuery.endCreatedDate }</if>
      <if test="parentCatalogQuery.level != null">AND parentCatalog.level = #{parentCatalogQuery.level}</if>
      <if test="parentCatalogQuery.name != null">AND parentCatalog.name = #{parentCatalogQuery.name}</if>
      <if test="parentCatalogQuery.likeName != null">AND parentCatalog.name LIKE CONCAT(#{parentCatalogQuery.likeName} ,'%')</if>
      <if test="parentCatalogQuery.code != null">AND parentCatalog.code = #{parentCatalogQuery.code}</if>
      <if test="parentCatalogQuery.likeCode != null">AND parentCatalog.code LIKE CONCAT(#{parentCatalogQuery.likeCode} ,'%')</if>
      <if test="parentCatalogQuery.parentCatalogId != null">AND parentCatalog.parentCatalogId = #{parentCatalogQuery.parentCatalogId}</if>
    </if>
  </sql>
  <sql id="QUERY_WHERE">
    <where>
      <include refid="QUERY_WHERE_SQL"/>
    </where>
  </sql>
  <sql id="QUERY_ORDER_BY">
    <if test="orderBys.size() &gt; 0">ORDER BY
      <foreach collection="orderBys.entrySet()" item="entry" separator=", ">catalog.${entry.key} ${entry.value}</foreach>
    </if>
  </sql>
  <sql id="QUERY_LIMIT">
    <if test="pageSize &gt; 0">LIMIT ${start}, ${pageSize}</if>
  </sql>
  <select id="count" parameterType="com.xmg.mall.product.qo.CatalogQuery" resultType="java.lang.Integer">SELECT COUNT(*) FROM `Catalog` AS catalog
    <include refid="QUERY_JOIN"/>
    <include refid="QUERY_WHERE"/>
  </select>
  <select id="query" parameterType="com.xmg.mall.product.qo.CatalogQuery" resultMap="VO_RESULT">SELECT 
    <include refid="QUERY_COLUMNS"/>
    <include refid="JOIN_COLUMNS"/> FROM `Catalog` AS catalog
    <include refid="QUERY_JOIN"/>
    <include refid="QUERY_WHERE"/>
    <include refid="QUERY_ORDER_BY"/>
    <include refid="QUERY_LIMIT"/>
  </select>
</mapper>
