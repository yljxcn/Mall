<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmg.mall.user.mapper.GradeMapper">
  <resultMap id="BASE_RESULT" type="com.xmg.mall.user.domain.Grade">
    <id property="id" column="id"/>
    <result property="createdDate" column="createdDate"/>
    <result property="lastModifiedDate" column="lastModifiedDate"/>
    <result property="version" column="version"/>
    <result property="name" column="name"/>
    <result property="upperLimit" column="upperLimit"/>
    <result property="lowerLimit" column="lowerLimit"/>
    <result property="discount" column="discount"/>
    <result property="proportionalScoreValue" column="proportionalScoreValue"/>
    <result property="proportionalAmountValue" column="proportionalAmountValue"/>
    <result property="mods" column="mods"/>
  </resultMap>
  <sql id="BASE_COLUMNS">grade.id, grade.createdDate, grade.lastModifiedDate, grade.version,grade.name,grade.upperLimit,grade.lowerLimit,grade.discount,grade.proportionalScoreValue,grade.proportionalAmountValue,grade.mods</sql>
  <sql id="QUERY_COLUMNS">grade.id, grade.createdDate, grade.lastModifiedDate, grade.version,grade.name,grade.upperLimit,grade.lowerLimit,grade.discount,grade.proportionalScoreValue,grade.proportionalAmountValue,grade.mods</sql>
  <resultMap id="VO_RESULT" type="com.xmg.mall.user.vo.ExtendedGrade" extends="BASE_RESULT"/>
  <sql id="JOIN_COLUMNS"/>
  <select id="get" resultMap="BASE_RESULT" parameterType="java.lang.Long">SELECT 
    <include refid="BASE_COLUMNS"/> FROM `Grade` grade WHERE id = #{id }
  </select>
  <delete id="delete" parameterType="java.lang.Long">DELETE FROM `Grade` WHERE id = #{id}</delete>
  <insert id="add" parameterType="com.xmg.mall.user.domain.Grade" useGeneratedKeys="true" keyProperty="id" keyColumn="id">INSERT INTO `Grade`(id, createdDate, version,name,upperLimit,lowerLimit,discount,proportionalScoreValue,proportionalAmountValue,mods) VALUES(#{id }, #{createdDate}, 0, #{name }, #{upperLimit }, #{lowerLimit }, #{discount }, #{proportionalScoreValue }, #{proportionalAmountValue }, #{mods })</insert>
  <update id="update" parameterType="com.xmg.mall.user.domain.Grade">UPDATE `Grade`
    <set>lastModifiedDate = now(), version = version + 1, name = #{name }, upperLimit = #{upperLimit }, lowerLimit = #{lowerLimit }, discount = #{discount }, proportionalScoreValue = #{proportionalScoreValue }, proportionalAmountValue = #{proportionalAmountValue }, mods = #{mods }</set>
    <where>id = #{id } AND version = #{version }</where>
  </update>
  <sql id="QUERY_JOIN"/>
  <sql id="QUERY_WHERE_SQL">
    <if test="ids != null">AND grade.id IN
      <foreach collection="ids" item="id" open="(" close=")" separator=", ">#{id }</foreach>
    </if>
    <if test="startCreatedDate != null">AND grade.createdDate &gt;= #{startCreatedDate }</if>
    <if test="endCreatedDate != null">AND grade.createdDate &lt;= #{endCreatedDate }</if>
    <if test="likeName != null">AND grade.name LIKE CONCAT(#{likeName} ,'%')</if>
    <if test="upperLimit != null">AND grade.upperLimit = #{upperLimit}</if>
    <if test="minUpperLimit != null">AND grade.upperLimit &gt;= #{minUpperLimit}</if>
    <if test="maxUpperLimit != null">AND grade.upperLimit &lt;= #{maxUpperLimit}</if>
    <if test="lowerLimit != null">AND grade.lowerLimit = #{lowerLimit}</if>
    <if test="minLowerLimit != null">AND grade.lowerLimit &gt;= #{minLowerLimit}</if>
    <if test="maxLowerLimit != null">AND grade.lowerLimit &lt;= #{maxLowerLimit}</if>
    <if test="discount != null">AND grade.discount = #{discount}</if>
    <if test="minDiscount != null">AND grade.discount &gt;= #{minDiscount}</if>
    <if test="maxDiscount != null">AND grade.discount &lt;= #{maxDiscount}</if>
    <if test="excludeMods != null">AND 
      <foreach collection="excludeMods" item="mod" open="(" close=")" separator=" AND ">grade.mods &amp; #{mod } = 0</foreach>
    </if>
    <if test="includeMods != null &amp;&amp; excludeMods == null ">AND 
      <foreach collection="includeMods" item="mod" open="(" close=")" separator=" OR ">grade.mods &amp; #{mod } &lt;&gt; 0</foreach>
    </if>
  </sql>
  <sql id="QUERY_WHERE">
    <where>
      <include refid="QUERY_WHERE_SQL"/>
    </where>
  </sql>
  <sql id="QUERY_ORDER_BY">
    <if test="orderBys.size() &gt; 0">ORDER BY
      <foreach collection="orderBys" item="value" index="key" separator=", ">grade.${key} ${value}</foreach>
    </if>
  </sql>
  <sql id="QUERY_LIMIT">
    <if test="pageSize &gt; 0">LIMIT ${start}, ${pageSize}</if>
  </sql>
  <select id="count" parameterType="com.xmg.mall.user.qo.GradeQuery" resultType="java.lang.Integer">SELECT COUNT(*) FROM `Grade` AS grade
    <include refid="QUERY_JOIN"/>
    <include refid="QUERY_WHERE"/>
  </select>
  <select id="query" parameterType="com.xmg.mall.user.qo.GradeQuery" resultMap="VO_RESULT">SELECT 
    <include refid="QUERY_COLUMNS"/>
    <include refid="JOIN_COLUMNS"/> FROM `Grade` AS grade
    <include refid="QUERY_JOIN"/>
    <include refid="QUERY_WHERE"/>
    <include refid="QUERY_ORDER_BY"/>
    <include refid="QUERY_LIMIT"/>
  </select>
</mapper>
